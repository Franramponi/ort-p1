Una empresa de logística y distribución desea una aplicación para informatizar sus procesos, para lo cual
nos brinda la siguiente información: Por disposición de la provincia donde desarrolla sus actividades no
puede tener más de 80 camiones de los cuales contamos con: Nro. de patente (entero), año de fabricación y
los kilómetros recorridos. Estos camiones pueden ser para transporte de líquidos o para transporte de
sólidos, en el caso de los primeros, nos informan además la capacidad de litros que puede transportar y la
cantidad de tanques que posee; en el caso de los que transportan sólidos, el ancho, alto y largo de la caja de
carga en metros.

Por otra parte tenemos la informacion de los no mas de 20 choferes que trabajan en la empresa. De cada
uno de ellos sabemos: el nro de legajo (entero de 1 a 20), el nombre y la edad.
Por cada viaje que alguien contrata con la empresa se informa: el camion, el chofer y los destinos (cada uno
de ellos con su nombre y teléfono de contacto del responsable del lugar). Los destinos de cada viaje se
guardan de manera tal que el último cargado sea el primero en visitar. La informacion de los viajes se guarda
ordenada de forma tal que el primer viaje que se contrató sea el primero que salga.

Tambien sabemos que los camiones se tienen que renovar cada cierto período. Los que transportan líquidos
se deben renovar cuando superan los 5 anios de antiguedad. Los que transportan solidos, si el largo de la caja supera los 6m, se renuevan cuando hayan recorrido más de 200.000Km y sino, cuando hayan superado
los 250.000Km.
Tanto los camiones como los choferes, deben poder identificarse facilmente, para lo cual deben poder
mostrar su dato identificador en cualquier momento que se lo requiera.
Nota: El método estático aniosHastaHoy() de la clase Fecha recibe como parametro un anio y retorna la
cantidad de anios que pasaron desde el hasta el dia de hoy. Ejemplo: Fecha.aniosHastaHoy(1993) -> 28

Se pide:
A) El diagrama de clases UML que represente el modelo con sus relaciones, atributos y metodos.
B) Desarrollar un metodo llamado cantViajesSinDestino que reciba el nombre de un posible destino y retorne la cantidad de viajes programados que no lo incluyen.
C) Desarrollar un metodo llamado informarDestinosPorCamionChofer que muestre por consola la cantidad de destinos en total que visitará cada camión con cada chofer.
D) Desarrollar un metodo llamado renovarCamionesTranspSolido que devuelva una lista de camiones de tal tipo que deban ser renovados, ordenados de mayor a menor antiguedad.
E) Desarrollar un metodo llamado mostrarID en las clases que correspondan.