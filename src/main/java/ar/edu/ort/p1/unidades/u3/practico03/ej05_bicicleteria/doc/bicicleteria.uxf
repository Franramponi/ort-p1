<diagram program="umletino" version="14.3.0"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>220</x><y>130</y><w>290</w><h>60</h></coordinates><panel_attributes>Taller
--

--
+cantServiciosPosibles(ArrayList&lt;Bicicleta&gt;): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>260</x><y>310</y><w>210</w><h>110</h></coordinates><panel_attributes>Bicicleta
--
_-KM_MAX_PERMITIDO: int = 2000_
-marca: String
-modelo: String
-kilometraje: double
--
+isReparable(): boolean</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>230</x><y>490</y><w>260</w><h>80</h></coordinates><panel_attributes>BicicletaElectrica
--
_-POTENCIA_MAX_PERMITIDA: int = 250_
-potencia: double
--
+isReparable(): boolean</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>340</x><y>410</y><w>30</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>370</x><y>180</y><w>30</w><h>150</h></coordinates><panel_attributes>lt=&lt;.</panel_attributes><additional_attributes>10;130;10;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>580</x><y>90</y><w>290</w><h>190</h></coordinates><panel_attributes>Nota: Este ejercicio, tal como esta planteado,
no indica la necesidad de tener clases abstractas.
El taller no tiene la necesidad de conocer a las
bicicletas electricas, por tal motivo las recibe como
parametro en vez de tener que tener una lista de
bicicletas.</panel_attributes><additional_attributes></additional_attributes></element></diagram>